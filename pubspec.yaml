name: network_proxy
description: A new Flutter project.
version: 1.0.0
homepage: https://github.com/eitanliu/network_proxy
publish_to: https://pub.dartlang.org

environment:
  sdk: '>=2.16.0 <4.0.0'
  flutter: ">=2.10.0"

dependencies:
  flutter:
    sdk: flutter
  flutter_web_plugins:
    sdk: flutter
  plugin_platform_interface: ^2.0.2
  network_proxy_interface: #^1.0.0
    path: network_proxy_interface
  network_proxy_android: #^1.0.0
    path: network_proxy_android
  network_proxy_ios: #^1.0.0
    path: network_proxy_ios
  network_proxy_linux: #^1.0.0
    path: network_proxy_linux
  network_proxy_macos: #^1.0.0
    path: network_proxy_macos
  network_proxy_windows: #^1.0.0
    path: network_proxy_windows
  network_proxy_web: #^1.0.0
    path: network_proxy_web

dev_dependencies:
  flutter_test:
    sdk: flutter
  flutter_lints: ^2.0.0

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:
  # This section identifies this Flutter project as a plugin project.
  # The 'pluginClass' specifies the class (in Java, Kotlin, Swift, Objective-C, etc.)
  # which should be registered in the plugin registry. This is required for
  # using method channels.
  # The Android 'package' specifies package in which the registered class is.
  # This is required for using method channels on Android.
  # The 'ffiPlugin' specifies that native code should be built and bundled.
  # This is required for using `dart:ffi`.
  # All these are used by the tooling to maintain consistency when
  # adding or updating assets for this project.
  plugin:
    platforms:
      android:
        default_package: network_proxy_android
      ios:
        default_package: network_proxy_ios
      linux:
        default_package: network_proxy_linux
      macos:
        default_package: network_proxy_macos
      windows:
        default_package: network_proxy_windows
      web:
        default_package: network_proxy_web

  # To add assets to your plugin package, add an assets section, like this:
  # assets:
  #   - images/a_dot_burr.jpeg
  #   - images/a_dot_ham.jpeg
  #
  # For details regarding assets in packages, see
  # https://flutter.dev/assets-and-images/#from-packages
  #
  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # To add custom fonts to your plugin package, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts in packages, see
  # https://flutter.dev/custom-fonts/#from-packages
